<?xml version="1.0"?>
<launch>

  <arg name="verbose" default="true"/>
  <arg name="world" default="sonar_vase_blueview_p900_nps_multibeam.world"/>

  <arg name="standalone" default="true"/>
  <arg name="sonar_name" default="blueview_p900"/>

  <arg name="sonar_x" default="0"/>
  <arg name="sonar_y" default="2"/>
  <arg name="sonar_z" default="3"/>
  <arg name="sonar_roll" default="0"/>
  <arg name="sonar_pitch" default="0"/>
  <arg name="sonar_yaw" default="-1.5708"/>

  <arg name="maxDistance" default="4"/>
  <arg name="raySkips" default="1"/>
  <arg name="sonar_scale" default="'1 1 1'"/>
  <arg name="sonar_image_topic" default="sonar_image"/>
  <arg name="sonar_image_raw_topic" default="sonar_image_raw"/>
  <arg name="ray_visual" default="true"/>

  <arg name="plotScaler" default="0"/>
  <arg name="sensorGain" default="0.04"/>
  <arg name="writeLog" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="writeFrameInterval" default="5"/>
  <arg name="artificialVehicleVibration" default="false"/>
  <arg name="constantReflectivity" default="true"/>
  <arg name="reflectivityDatabaseFile" default="variationalReflectivityDatabase.csv"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find nps_uw_multibeam_sonar)/worlds/$(arg world)"/>
    <arg name="verbose" value="$(arg verbose)"/>
  </include>

  <param name="$(arg sonar_name)"
         command="$(find xacro)/xacro '$(find nps_uw_multibeam_sonar)/urdf/multibeam_sonar_blueview_p900.xacro'
         standalone:=$(arg standalone) name:=$(arg sonar_name) scale:=$(arg sonar_scale) debug:=$(arg debug)
         sonar_image_topic:=$(arg sonar_image_topic) sonar_image_raw_topic:=$(arg sonar_image_raw_topic)
         maxDistance:=$(arg maxDistance) raySkips:=$(arg raySkips) plotScaler:=$(arg plotScaler)
         sensorGain:=$(arg sensorGain) writeLog:=$(arg writeLog) writeFrameInterval:=$(arg writeFrameInterval)
         artificialVehicleVibration:=$(arg artificialVehicleVibration) constantReflectivity:=$(arg constantReflectivity)
         reflectivityDatabaseFile:=$(arg reflectivityDatabaseFile) ray_visual:=$(arg ray_visual)"/>
  <node name="spawn_$(arg sonar_name)" pkg="gazebo_ros" type="spawn_model"
        args="-param $(arg sonar_name) -urdf -x $(arg sonar_x) -y $(arg sonar_y) -z $(arg sonar_z)
              -R $(arg sonar_roll) -P $(arg sonar_pitch) -Y $(arg sonar_yaw) -model $(arg sonar_name)" />

  <!-- image_view for sonar image -->
  <node name="image_view_sonar" pkg="image_view" type="image_view"
        args="image:=/$(arg sonar_name)/$(arg sonar_image_topic)">
    <param name="window_name" value="$(arg sonar_name)" />
    <param name="autosize" value="true" />
    <param name="filename_format" value="/tmp/SonarImage_capture_%04i.jpg" />
  </node>

  <node pkg="tf" type="static_transform_publisher" name="multibeam_sonar_base_link"
        args="0 0 0 0 0 0 map forward_sonar_optical_link 50" />

</launch>